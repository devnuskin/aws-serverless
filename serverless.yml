service: 
  name: ItemService

provider:
  name: aws
  runtime: nodejs8.10
  endpointType: regional
  region: ${opt:region, 'us-west-2'}
  stage: ${opt:stage, 'dev'}
  memorySize: 128
  timeout: 6
  logRetentionInDays: 14
  tracing: true
  basePath: 'item' #This is the path  ***** PLEASE SET
  environment:
    AWS_XRAY_CONTEXT_MISSING: LOG_ERROR
    NODE_ENV: ${opt:stage, 'dev'}
    TABLE: 'Items'  #This is the DyanmoDB Table name  ***** PLEASE SET
  deploymentBucket:
    name: ${self:provider.stage}-${self:provider.region}-nuskin-sls

  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TABLE}*"
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"

resources:
  Resources:
    ##############################################
    ## Used for Enabling Metics on API Stage    ##
    ##############################################
    ApiGatewayStage:
      Type: AWS::ApiGateway::Stage
      Properties:
        DeploymentId:
          Ref: __deployment__ # provided by serverless-plugin-bind-deployment-id
        RestApiId:
          Ref: ApiGatewayRestApi
        StageName : ${self:provider.stage}
        MethodSettings:
          - HttpMethod: "*"
            LoggingLevel: INFO
            MetricsEnabled: true
            ResourcePath: "/*"
            
functions:
  MicroServiceSNS:  #This is the name of your SNS Lambda Function  ***** PLEASE CHANGE
    handler: src/index.snsProductInfo
    events:
      - sns: arn:aws:sns:${self:provider.region}:#{AWS::AccountId}:MicroService   #This is the ARN of your SNS Topic  ***** PLEASE CHANGE LAST NAME

  MicroService: #This is the name of your Lambda Function  ***** PLEASE CHANGE
    handler: src/index.xrayHandler
    events:
     - http:
        path: /{id}
        method: get
        cors:
          origin: '*'
          headers:
            - '*'
          allowCredentials: false
        request:
          parameters:
            paths:
              id: true
        ####################################################
        ### Section used for the custom authorizer       ###
        ### See Custom Authorizer's README for details   ###
        ### Remove/Update as Needed                      ###
        ####################################################
        authorizer:
          arn: ${ssm:/global/identifiedAuthorizer}
          resultTtlInSeconds: 600
          identitySource: method.request.header.Authorization
          type: request
        ####################################################
     - http:
        path: /
        method: post
        cors:
          origin: '*'
          headers:
            - '*'
          allowCredentials: false
     - http:
        path: /{id}
        method: delete
        cors:
          origin: '*'
          headers:
            - '*'
          allowCredentials: false
        request:
          parameters:
            paths:
              userId: true


#CI/CD Deployment configuration update with caution
custom:
  ##Used so servless-offline has the same path as after deploying to the gateway
  serverless-offline:
    prefix: ${self:provider.basePath}

  ###Used for Assigning Function to Custom API Domain
  customDomain:
      basePath: ${self:provider.basePath}
      domainName: ${ssm:/global/apidomain}
      stage: ${self:provider.stage}
      certificateName: '*.cloud.nuskin.com'
      endpointType: 'regional'
      createRoute53Record: false

plugins:
  - serverless-offline
  - serverless-domain-manager
  - serverless-plugin-tracing
  - serverless-pseudo-parameters
  - serverless-prune-plugin
  - serverless-plugin-bind-deployment-id

package:
  exclude:
    - node_modules/aws-sdk/**
    - .idea/**
    - .nyc_output/**
    - coverage/**
    - test/**
    - mochawesome-report/**
    - serverless-resources/**
    - "*.iml"
    - LICENSE
    - qa-dashboard.sh
    - buildspec.yml
    - README.md
    - swagger.yml
    - template.yml
