service:
  name: ItemService

provider:
  name: aws
  runtime: nodejs6.10
  endpointType: regional
  region: 'us-west-2'
  stage: ${opt:stage, 'dev'}
  tracing: true
  basePath: 'item' #This is the path  ***** PLEASE SET
  environment:
    AWS_XRAY_CONTEXT_MISSING: LOG_ERROR
    NODE_ENV: ${opt:stage, 'dev'}
    TABLE: 'Items'  #This is the DyanmoDB Table name  ***** PLEASE SET
  deploymentBucket:
    name: ${self:provider.stage}-${self:provider.region}-nuskin-sls

package:
  exclude:
    - README.md
    - buildspec.yml
    - test/**


  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TABLE}"
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"


functions:
  ItemService: #This is the name of your Lambda Function  ***** PLEASE SET
    handler: src/index.handler
    events:
     - http:
        path: /{id}
        method: get
        cors: true
        request:
          parameters:
            paths:
              id: true
     - http:
        path: /
        method: post
        cors: true
     - http:
        path: /{id}
        method: delete
        cors: true
        request:
          parameters:
            paths:
              userId: true




#CI/CD Deployment configuration update with caution

custom:

  customDomain:
      basePath: ${self:provider.basePath}
      domainName: ${ssm:/global/apidomain,'devapi.cloud.nuskin.com' }
      stage: ${self:provider.stage}
      certificateName: '*.cloud.nuskin.com'
      endpointType: 'regional'
      createRoute53Record: false

  logForwarding:
    destinationARN: ${ssm:/global/logarn, 'arn:aws:lambda:us-west-2:140547422257:function:LogsToES-dev-LogsToES'}
    filterPattern: '[timestamp=*Z, request_id="*-*", event]'

plugins:
  - serverless-offline
  - serverless-plugin-tracing
  - serverless-domain-manager
  - serverless-log-forwarding
